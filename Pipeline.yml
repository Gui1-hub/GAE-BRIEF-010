trigger:
  branches:
    include:
      - main  # Déclenche la pipeline pour les commits dans la branche 'main'

pool:
  vmImage: 'ubuntu-latest'  # Utilisation d'une machine virtuelle Ubuntu

variables:
  terraformVersion: '1.9.8'  # Version de Terraform

steps:

  # Étape 1 : Cloner le dépôt GitHub
  - task: Checkout@1  # Cette tâche extrait votre code depuis le dépôt GitHub
    displayName: 'Checkout code'

  # Étape 2 : Installer Terraform manuellement
  - script: |
      curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      sudo apt-get update
      sudo apt-get install terraform=$(terraformVersion)
    displayName: 'Install Terraform'

  # Étape 3 : Initialiser Terraform
  - script: terraform init  # Initialisation de Terraform dans le répertoire du dépôt
    displayName: 'Initialize Terraform'

  # Étape 4 : Vérifier le plan Terraform
  - script: terraform plan -out=tfplan  # Crée un plan d'exécution pour la création de la VM
    displayName: 'Terraform Plan'

  # Étape 5 : Appliquer le plan Terraform pour créer la VM
  - script: terraform apply -auto-approve tfplan  # Applique le plan pour créer la VM
    displayName: 'Terraform Apply'

  # Étape 6 : Optionnel - Publier des artefacts
  - task: PublishBuildArtifacts@1  # Publier des artefacts de build, si nécessaire
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'terraform-artifacts'
      publishLocation: 'Container'
    displayName: 'Publish Terraform Artifacts'
