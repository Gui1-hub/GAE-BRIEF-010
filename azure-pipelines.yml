# Se déclenche lorsqu'un code est poussé sur la branche main
trigger:
- main

# Spécifie sur quel pool d'agents la pipeline doit s'exécuter
pool: 
  name: Ubuntu-VM TEST
  vmImage: ubuntu-latest

steps:
  # Etape 1: Met à jour la VM Ubuntu et ses dépendances
  - script: |
      sudo apt-get update
      sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common git
      echo "System updated and essential dependencies installed."
    displayName: 'Update System and Install Dependencies'

  # Etape 2: Installe Docker
  - script: |
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      sudo apt-get update
      sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      sudo systemctl enable docker
      sudo systemctl start docker
    displayName: 'Install Docker'

  # Etape 3: Installe Docker Compose
  - script: |
      sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      docker compose --version
    displayName: 'Install Docker Compose'

  # Etape 4: Clone le repos Git qui contient le fichier docker-compose.yml
  - script: |
      git clone git@github.com:Gui1-hub/Docker-Pipeline.git
      cd Docker-Pipeline
      echo "Repository cloned successfully."
    displayName: 'Clone Git Repository'

  # Etape 5: Build les images Docker avec Docker-Compose
  - script: |
      cd Docker-Pipeline
      docker compose -f docker-compose.yml build
    displayName: 'Build Docker images from docker-compose.yml'

  # Etape 6: Deploie les services en utilisant Docker-Compose
  - script: |
      cd Docker-Pipeline
      sudo docker compose -f docker-compose.yml up -d
    displayName: 'Deploy services using Docker Compose'
